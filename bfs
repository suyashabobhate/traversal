import java.util.*;
public class bfs {

	private int v;
	private LinkedList<Integer> adj[];
	private LinkedList<Integer> queue=new LinkedList<Integer>();
	public bfs(int V){
		v=V;
		adj=new LinkedList[V];
		for(int i=0;i<V;i++) {
		  adj[i]=new LinkedList<Integer>();
		}
	}
	
	public void addedge(int v,int w) {
	   adj[v].add(w);
	}
	
	public void bfsprint(int s) {
		boolean [] visited=new boolean[v];
		visited[s]=true;
		queue.add(s);
		while(queue.size()!=0) {
			s=queue.poll();
			System.out.println(s+" ");
			Iterator<Integer> it=adj[s].listIterator();
			while(it.hasNext()) {
				int n=it.next();
				if(!visited[n]) {
					visited[n]=true;
					queue.add(n);
				}
			}
		}
	}
	
	public static void main(String[] args) {
		bfs graph=new bfs(4);
		graph.addedge(0, 1);
		graph.addedge(0, 2);
		graph.addedge(1, 2);
		graph.addedge(2, 0);
		graph.addedge(2, 3);
		graph.addedge(3, 3);
		graph.bfsprint(2);
		

	}

}
